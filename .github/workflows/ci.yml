name: ci

on:
  push:
    branches:
      - "*"

  pull_request:
    branches:
      - "*"

  # schedule:
  #   - cron: '0 0 * * *'

env:
  CACHE_NUMBER: 1 # increase to reset cache manually

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/my-env

          - os: macos-latest
            label: osx-64
            prefix: /Users/runner/miniconda3/envs/my-env

          # - os: windows-latest
          #   label: win-64
          #   prefix: C:\Miniconda3\envs\my-env

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: my-env
          use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: |
          mamba env update -n my-env -f environment.yml &&  \
          mamba install -n my-env pytest pytest-mock requests-mock coverage && \
          mamba install -n my-env -c bioconda "samtools>=1.11" "bcftools>=1.11" "htslib>=1.11"
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Coverage and tests
        shell: bash -l {0}
        run: coverage run -m pytest && coverage xml

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
